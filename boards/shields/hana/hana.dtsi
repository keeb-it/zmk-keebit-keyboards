#include <dt-bindings/zmk/matrix_transform.h>

// &pinctrl {
//     /* configuration for uart0 device, default state */
//     uart0_default: uart0_default {
//         /* group 1 ('group1' name is arbitrary) */
//         group1 {
//             /* configure P1.11 as UART_TX */
//             psels = <NRF_PSEL(UART_TX, 1, 11)>;
//         };
//         /* group 2 */
//         group2 {
//             /* configure P1.12 as UART_RX */
//             psels = <NRF_PSEL(UART_RX, 1, 12)>;
//             // bias-pull-up;
//         };
//     };
// };

&xiao_serial {
    status = "okay";
    // current-speed = <115200>;
    // pinctrl-0 = <&uart0_default>;
    // pinctrl-names = "default", "sleep";
    // pinctrl-names = "default";
};

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &test_transform;
        zmk,split-uart = &xiao_serial;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";

        row-gpios
            = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    default_transform: default_transform {
        compatible = "zmk,matrix-transform";
        columns = <16>;
        rows = <3>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)                 RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15)
        >;
    };

    test_transform: test_transform {
        compatible = "zmk,matrix-transform";
        columns = <6>;
        rows = <2>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) 
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) 
        >;
    };
};
